{"version":3,"file":"static/js/307.57f20a5d.chunk.js","mappings":"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","sources":["components/Dots/index.jsx","components/Slide/review-slide.jsx","components/Slide/index.jsx"],"sourcesContent":["import PropTypes from \"prop-types\";\n const Dots = ({ slides, active, setActive }) => {\n  return (\n    <ul className=\"dots\" data-testid=\"dots\">\n      {slides.map((child, index) => (\n        <li className={index === active ? \"active\" : \"\"} key={index}>\n          <button onClick={() => setActive(index)}>{index + 1}</button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nDots.propTypes = {\n  slides: PropTypes.array.isRequired,\n  active: PropTypes.number.isRequired,\n  setActive: PropTypes.func.isRequired\n};\n\nexport {\n  Dots\n}","const ReviewSlide = ({\n    reviewHeader, reviewList, reviewComment, onReviewSubmit\n}) => {\n\n    const renderList =() => {\n        return reviewList.map((item)=>(\n            <div className='review-list'>\n              <div className='review-list-content'>\n                  <h3> {item.title} </h3>\n                  <p>{item.subTitle}</p>\n              </div>\n              <div className='review-list-icon'>\n                  <spen>{item.isLike ? \"üëé\" : \"üëç\"}</spen>\n              </div>\n          </div>\n        ))\n    }\n    return (\n        <div className='review-container'>\n        <h2 className='review-header'>{reviewHeader}</h2>\n        {renderList()}\n        <div className='review-list-last'>\n            <div className='review-list-content'>\n                <h3> {reviewComment.title} </h3>\n            </div>\n            <div className='review-list-icon'>\n                <spen>{reviewComment.icon}</spen>\n            </div>\n        </div>\n        <div className='review-submit' >\n            <button onClick={onReviewSubmit}>Submit</button>\n        </div>\n    </div>\n    )\n}\nexport {ReviewSlide}","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Dots } from \"../Dots\";\nimport { ReviewSlide } from \"./review-slide\";\nimport \"./slide.css\";\n\nconst Slide = ({ slides, reviewList }) => {\n  const [active, setActive] = useState(0);\n  const [hover, setHover] = useState(false);\n  const [hoverItem, setHoverItem] = useState(0);\n  const percentage = -100 * active + \"%\";\n  const sliderLength = slides.length - 1;\n\n  const useScrollPosition = (e) => {\n    if (active > sliderLength) {\n      return setActive(0);\n    }\n    if (e.deltaY > 0) {\n      active !== sliderLength && setActive((prv) => prv + 1);\n    } else {\n      setActive((prv) => prv && prv - 1);\n    }\n  };\n\n  React.useEffect(() => {\n    const getData = setTimeout(() => {\n      document.addEventListener(\"wheel\", useScrollPosition);\n    }, 200);\n    return () => {\n      clearTimeout(getData);\n      document.removeEventListener(\"wheel\", useScrollPosition);\n    };\n  }, [useScrollPosition]);\n\n  const handleMouseEnter = (e, id) => {\n    setHoverItem(id);\n    setHover(true);\n  };\n\n  const handleMouseLeave = () => {\n    setHoverItem(0);\n    setHover(false);\n  };\n\n  const onReviewSubmit = () => {\n    debugger;\n    return alert(\"review\");\n  };\n\n  if (slides.length === 0) {\n    return <h1>No Slide's Available</h1>;\n  }\n  return (\n    <>\n      <div\n        className=\"slides\"\n        style={{ transform: `translate3d(0, ${percentage}, 0)` }}\n        data-testid=\"slides\"\n      >\n        {slides.map((child, index) => {\n          const optionList = !!child.options && child.options;\n          return (\n            <div\n              className={`slide ${index === active && \"active\"}`}\n              key={index}\n            >\n              <div className=\"container-slide\">\n                <div\n                  className={`${\n                    sliderLength === active ? \"slide-review\" : \"slide-text\"\n                  }`}\n                >\n                  <h1>{child.title}</h1>\n                </div>\n                {sliderLength === active ? (\n                  <ReviewSlide\n                    {...reviewList}\n                    onReviewSubmit={onReviewSubmit}\n                  />\n                ) : (\n                  <div className=\"slide-emoji\">\n                    {optionList &&\n                      optionList.map((option, index) => {\n                        return (\n                          <div\n                            key={index}\n                            className={`hover-emoji ${\n                              hover &&\n                              option.id !== hoverItem &&\n                              \"hover-emoji-other\"\n                            }`}\n                            onMouseEnter={(e) => handleMouseEnter(e, option.id)}\n                            onMouseLeave={handleMouseLeave}\n                          >\n                            <span className=\"emoji-icon\">{option.icon}</span>\n                            <span className=\"emoji-label\">{option.label}</span>\n                          </div>\n                        );\n                      })}\n                  </div>\n                )}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n      {slides.length > 0 && (\n        <Dots slides={slides} active={active} setActive={setActive} />\n      )}\n    </>\n  );\n};\nSlide.propTypes = {\n  slides: PropTypes.array.isRequired,\n  reviewList: PropTypes.object.isRequired,\n};\n\nexport default Slide;\n"],"names":["Dots","_ref","slides","active","setActive","_jsx","className","children","map","child","index","onClick","ReviewSlide","reviewHeader","reviewList","reviewComment","onReviewSubmit","_jsxs","item","title","subTitle","isLike","icon","useState","hover","setHover","hoverItem","setHoverItem","percentage","sliderLength","length","useScrollPosition","e","deltaY","prv","React","getData","setTimeout","document","addEventListener","clearTimeout","removeEventListener","handleMouseLeave","alert","_Fragment","style","transform","concat","optionList","options","option","id","onMouseEnter","handleMouseEnter","onMouseLeave","label"],"sourceRoot":""}